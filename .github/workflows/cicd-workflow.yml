# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  REGISTRY: docker.io
  REPO_OWNER: ${{ github.repository_owner }}
jobs:
  build:
    strategy:
      matrix:
        image_name: ["discovery-service","inventory-sevice","order-service","product-service"]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'corretto'
        cache: maven

    - name: Build Jar file
      working-directory: ${{matrix.image_name}}
      run: mvn clean package -DskipTests

    - name: Build the Docker image
      run: docker-compose build --no-cache --force-rm

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract image metadata for ${{ matrix.image_name }}
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.image_name }}

    - name: Build and push ${{ matrix.image_name }}
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.image_name }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
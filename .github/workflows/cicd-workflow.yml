# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven discovery-service
      run: mvn clean package -DskipTests --file discovery-service/pom.xml
    - name: Build with Maven inventory-service
      run: mvn clean package -DskipTests  --file inventory-sevice/pom.xml
    - name: Build with Maven order-service
      run: mvn clean package -DskipTests --file order-service/pom.xml
    - name: Build with Maven product-service
      run: mvn clean package -DskipTests --file product-service/pom.xml

    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Compose Build
      working-directory: .
      run: docker-compose build

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag discovery-service:latest ${{secrets.DOCKER_USERNAME}}/discovery-service:latest
        docker push ${{secrets.DOCKER_USERNAME}}/discovery-service:latest

